r <- sum(yi)/sum(xi)
r
n <- 4
N <- 10
tauhatx <- N/n*sum(y)
tauhatx
tauhatr <- r*tauhatx
tauhatr
s2 <- var(yi)
s2
varhattaur <- N*(N-2)*s2/n + N^2*(n-n1)/(n*n1*(n1-1))* sum((yi-r*x1)^2)
varhattaur
varhattaur <- N*(N-2)*s2/n + N^2*(n-n1)/(n*n1*(n1-1))* sum((yi-r*xi)^2)
varhattaur
varhattaur <- N*(N-n)*s2/n + N^2*(n-n1)/(n*n1*(n1-1))* sum((yi-r*xi)^2)
varhattaur
ys <- c(4, 12, 7)
Mi <- c(5, 20, 10)
n = length(ys)
N = 10
M = 100
Tauhat <- N * mean(ys)
Tauhat
ssq <- var(ys)
ssq
varhatTauhat <- N*(N-n)* ssq / n
varhatTauhat
varhatTauhat <- N*(N-n)* ssq / M
varhatTauhat
r <- sum(ys)/sum(Mi)
r
taur <- r*M
taur
varhatTauhat <- N*(N-n)/(n*(n-1))*sum((ys-r*Mi)^2)
varhatTauhat
pi <- Mi/M
pi
Tauhatp <- mean(ys/pi)
Tauhatp
varhatTauhatp <- var(ys/pi) / 3
varhatTauhatp
y <- c(44, 55, 4, 16)
xi <- c(44, 4)
yi <- c(56, 6)
n1 <- 2
r <- sum(yi)/sum(xi)
r
n <- 4
N <- 10
tauhatx <- N/n*sum(y)
tauhatx
tauhatr <- r*tauhatx
tauhatr
tauhatx <- N/n*sum(y)
tauhatx
tauhatr <- r*tauhatx
tauhatr
s2 <- var(yi)
s2
varhattaur <- N*(N-n)*s2/n + N^2*(n-n1)/(n*n1*(n1-1))* sum((yi-r*xi)^2)
varhattaur
y <- c(44, 55, 4, 16)
xi <- c(44, 4)
yi <- c(56, 6)
n1 <- 2
r <- sum(yi)/sum(xi)
r
n <- 4
N <- 10
tauhatx <- N/n*sum(y)
tauhatx
taux <- sum(y)
taux
n= 4
n1= 2
sigma2 <- var(y)
tau <- sum(y)
taux <- sum(xi)
R <- tau/taux
sigmar2 <- 1/(N-1)*sum((yi-R*xi)^2)
sigmar2
n= 4
n1= 2
sigma2 <- var(y)
tau <- sum(y)
taux <- sum(xi)
R <- tau/taux
sigmar2 <- 1/(N-1)*sum((yi-R*xi)^2)
sigmar2
frac <- sqrt(2*sigmar2/(sigma2-sigmar2))
frac
frac <- sqrt(0.5*sigmar2/(sigma2-sigmar2))
frac
y <- c(44, 55, 4, 16)
xi <- c(44, 4)
yi <- c(56, 6)
n= 4
n1= 2
sigma2 <- var(yi)
tau <- sum(yi)
taux <- sum(xi)
R <- tau/taux
sigmar2 <- 1/(N-1)*sum((yi-R*xi)^2)
sigmar2
frac <- sqrt(0.5*sigmar2/(sigma2-sigmar2))
frac
R <- tau/taux
R
r <- sum(yi)/sum(xi)
r
y <- c(44, 55, 4, 16)
xi <- c(44, 4)
yi <- c(56, 6)
n= 4
n1= 2
sigma2 <- var(yi)
tau <- sum(yi)
taux <- sum(xi)
R <- tau/taux
sigmar2 <- 1/(N-1)*sum((yi-R*xi)^2)
sigmar2
frac <- sqrt(2*sigmar2/(sigma2-sigmar2))
frac
n= 4
n1= 2
sigma2 <- var(y)
tau <- sum(yi)
taux <- sum(xi)
R <- tau/taux
sigmar2 <- 1/(N-1)*sum((yi-R*xi)^2)
sigmar2
frac <- sqrt(2*sigmar2/(sigma2-sigmar2))
frac
n= 4
y <- c(44, 55, 4, 16)
xi <- c(44, 4)
yi <- c(56, 6)
n= 4
n1= 2
sigma2 <- var(y)
tau <- sum(yi)
taux <- sum(xi)
R <- tau/taux
sigmar2 <- 1/(N-1)*sum((yi-R*xi)^2)
sigmar2
frac <- sqrt(2*sigmar2/(sigma2-sigmar2))
frac
nprime <- 500
N <- 5000
L <- 2
e1 <- 280
sde1 <- 160
e2 <- 110
sde2 <- 60
y <- c(280, 110)
np <- c(336, 164)
n <- c(112, 41)
s2 <- c(160, 60)
w <- np/nprime
w
y <- c(280, 110)
np <- c(336, 164)
n <- c(112, 41)
s2 <- c(160, 60)
w <- np/nprime
w
ydhat <- sum(w*y)
ydhat
(N-1)/N*sum(((np-1)/(nprime-1))*w*s2/n)
y <- c(280, 110)
yh <- sum(y)/2
yh
varydhat <- (N-1)/N*sum(((np-1)/(nprime-1))*w*s2/n)+(N-np)/(N*(np-1))*sum(w*(yh-ydhat)^2)
varydhat
ydhat <- sum(w*y)
ydhat
varydhat <- (N-1)/N*sum(((np-1)/(nprime-1))*w*s2/n)+(N-np)/(N*(np-1))*sum(w*(yh-ydhat)^2)
varydhat
sum(w*(yh-ydhat)^2
sum(w*(yh-ydhat)^2)
sum(w*(yh-ydhat)^2)
(N*(np-1))
varydhat <- (N-1)/N*sum(((np-1)/(nprime-1))*w*s2/n)+(N-nprime)/(N*(nprime-1))*sum(w*(yh-ydhat)^2)
varydhat
nprime <- 500
N <- 5000
L <- 2
e1 <- 280
sde1 <- 160
e2 <- 110
sde2 <- 60
y <- c(280, 110)
yh <- sum(y)/2
np <- c(336, 164)
n <- c(112, 41)
s2 <- c(160, 60)
s2_1 <- sum(s2)/2
w <- np/nprime
ydhat <- sum(w*y)
ydhat
varydhat <- (N-1)/N*sum(((np-1)/(nprime-1))*w*s2/n)+(N-nprime)/(N*(nprime-1))*sum(w*(yh-ydhat)^2)
varydhat
ys <- c(4, 12, 7)
Mi <- c(5, 20, 10)
n = length(ys)
N = 10
M = 100
Tauhat <- N * mean(ys)
Tauhat
n = 100
M = 5000
y1 = 0
y2 = 3400
y3 = 5000
y4 = 6600
y5 = 0
y6 = 0
y7 = 12000
w <- numeric(100)
w[1] <- ((y1 + y2)/2) + ((y3 + y4 + y5)/3)
w[2] <-  ((y3 + y4 + y5)/3
w[3] <-  y7
mean (w)
w[1] <- ((y1 + y2)/2) + ((y3 + y4 + y5)/3)
w[1]
w[2]
n = 100
M = 5000
y1 = 0
y2 = 3400
y3 = 5000
y4 = 6600
y5 = 0
y6 = 0
y7 = 12000
w <- numeric(100)
w[1] <- ((y1 + y2)/2) + ((y3 + y4 + y5)/3)
w[2] <-  ((y3 + y4 + y5))/3
w[3] <-  y7
mean (w)
n = 100
M = 5000
y1 = 0
y2 = 3400
y3 = 5000
y4 = 6600
y5 = 0
y6 = 0
y7 = 12000
w <- numeric(100)
w[1] <- ((y1 + y2)/2) + ((y3 + y4 + y5)/3)
w[2] <-  ((y3 + y4 + y5))/3
w[3] <-  y7
mean (w)
Tauhat_m <- M*mean (w)
Tauhat_m
var (w)
varhat_Tauhat_ma <- (M*(M-n)/n)*var(w)
varhat_Tauhat_ma
w = numeric(100)
y= c(0, 3400, 5000, 6600, 0, 0, 12000)
y
w[1] = y[2]/2+ (y[3]+y[4])/3
w[2] = (y[3]+y[4])/3
w[3] = y[7]/1 # by default w[4]=...=w[100]=0
mean(w)
var(w)
n= 100
M= 5000
taumhat <- M* mean(w)
taumhat
varhattauhatm <- (M*(M-n)/n)*var(w)
varhattauhatm
setwd("/Users/subasishdas1/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
tool <- read.csv("6.1a.csv")
hours <- tool$Life.Hours
tool[,1:3] <- lapply(tool[,1:3],factor)
lm.conversion <- aov(Life.Hours ~  A*B*C, data= tool)
library(FrF2)
DanielPlot(lm.conversion)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
tool <- read.csv("6.1a.csv")
hours <- tool$Life.Hours
tool[,1:3] <- lapply(tool[,1:3],factor)
lm.conversion <- aov(Life.Hours ~  A*B*C, data= tool)
library(FrF2)
DanielPlot(lm.conversion)
tool[,1:3] <- lapply(tool[,1:3],factor)
tool1.aov <- aov(Life.Hours~A*B*C, data=tool)
summary(tool1.aov)
# reduced
tool2.aov <- aov(Life.Hours~A + B + C + A*C, data=tool)
summary(tool2.aov)
tool_num <- read.csv("6.1a.csv")
tool_num.aov <- lm(Life.Hours ~ A + B + C + A*C,  data=tool_num)
summary(tool_num.aov)
tool[,1:3] <- lapply(tool[,1:3],factor)
library(ggplot2)
df <- with(tool, aggregate(Life.Hours, list(C.Cutting.Angle = C.Cutting.Angle, A.Cutting.Speed = A.Cutting.Speed),
mean))
df$se <- with(tool, aggregate(Life.Hours, list(C.Cutting.Angle = C.Cutting.Angle, A.Cutting.Speed = A.Cutting.Speed),
function(x) sd(x)/sqrt(10)))[, 3]
opar <- theme_update(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black"))
gp <- ggplot(df, aes(x = A.Cutting.Speed, y = x, colour = C.Cutting.Angle, group = C.Cutting.Angle))
gp + geom_line(aes(linetype = C.Cutting.Angle), size = 0.6) + geom_point(aes(shape = C.Cutting.Angle),
size = 3) + geom_errorbar(aes(ymax = x + se, ymin = x - se), width = 0.1)
tool[,1:3] <- lapply(tool[,1:3],factor)
library(ggplot2)
df <- with(tool, aggregate(Life.Hours, list(C= C, A= A),
mean))
df$se <- with(tool, aggregate(Life.Hours, list(C = C, A= A),
function(x) sd(x)/sqrt(10)))[, 3]
opar <- theme_update(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black"))
gp <- ggplot(df, aes(x = A, y = x, colour = C, group = C))
gp + geom_line(aes(linetype = C), size = 0.6) + geom_point(aes(shape = C),
size = 3) + geom_errorbar(aes(ymax = x + se, ymin = x - se), width = 0.1)
with(tool, plot(c(-1,1),tapply(Life.Hours, B,mean),type="b",pch=16,xlab="Tool Geometry",ylab="Life Hours"))
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
tool_num <- read.csv("6.1a.csv")
tool_num.aov <- lm(Life.Hours ~ A+C,  data=tool_num)
summary(tool_num.aov)
s3d <- scatterplot3d(tool_num$A,tool_num$C,tool_num$Life.Hours ,type="p", angle=135,scale.y=1,
xlab="Cutting Speed",ylab="Cutting Angle")
s3d$plane3d(tool_num.aov,lty.box="solid",col="darkgray")
tmp <- list(A.Cutting.Speed=seq(-1,1,by=.05),C.Cutting.Angle=seq(-1,1,by=.05))
new.data <- expand.grid(tmp)
new.data$fit <- predict(tool_num.aov,new.data)
contourplot(fit ~ A + C, new.data, xlab="Cutting Speed",ylab="Cutting Angle")
library(scatterplot3d)
library(lme4)
s3d <- scatterplot3d(tool_num$A,tool_num$C,tool_num$Life.Hours ,type="p", angle=135,scale.y=1,
xlab="Cutting Speed",ylab="Cutting Angle")
s3d$plane3d(tool_num.aov,lty.box="solid",col="darkgray")
tmp <- list(A.Cutting.Speed=seq(-1,1,by=.05),C.Cutting.Angle=seq(-1,1,by=.05))
new.data <- expand.grid(tmp)
new.data$fit <- predict(tool_num.aov,new.data)
contourplot(fit ~ A + C, new.data, xlab="Cutting Speed",ylab="Cutting Angle")
library(scatterplot3d)
library(lme4)
s3d <- scatterplot3d(tool_num$A,tool_num$C,tool_num$Life.Hours ,type="p", angle=135,scale.y=1,
xlab="Cutting Speed",ylab="Cutting Angle")
s3d$plane3d(tool_num.aov,lty.box="solid",col="darkgray")
tmp <- list(A.Cutting.Speed=seq(-1,1,by=.05),C.Cutting.Angle=seq(-1,1,by=.05))
new.data <- expand.grid(tmp)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
tool <- read.csv("6.1a.csv")
aov <- aov(Life.Hours~A*B*C, data=tool)
summary(aov)
confint(aov)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
tool <- read.csv("6.6a.csv")
mydata.lm=lm(Life.Hours~A*B*C,tool)
n=1
k=3
effects=coefficients(mydata.lm)[-c(1)]*2
effcets
effects
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
toola <- read.csv("6.6a.csv")
tool1a.aov <- aov(Life.Hours~A*B*C + I((B)^2), data=toola)
summary(tool1a.aov)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
toola <- read.csv("6.6a.csv")
tool2a.aov <- aov(Life.Hours~A+ B+ C + A*C, data=toola)
summary(tool2a.aov)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5")
tool_numa <- read.csv("6.6.csv")
tool_numa.aov <- lm(Life.Hours ~ A.Cutting.Speed + B.Tool.Geometry + C.Cutting.Angle + A.Cutting.Speed*C.Cutting.Angle,  data=tool_numa)
summary(tool_numa.aov)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
circuit <- read.csv("6.12b.csv")
mydata.lm=lm(Thickness~A*B,circuit)
n=2
k=4
effects=coefficients(mydata.lm)[c(-1)]*2
effects
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
circuit <- read.csv("6.12b.csv")
mydata.lm=lm(Thickness~A*B,circuit)
n=2
k=4
effects=coefficients(mydata.lm)[c(-2)]*2
effects
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
circuit <- read.csv("6.12a.csv")
circuit.aov <- aov(Thickness ~A*B, data=circuit)
summary(circuit.aov)
circuit.lm <- lm(Thickness ~A*B , data=circuit)
summary(circuit.lm)
tmp <- list(A.Flow.Rate=seq(54,60,by=.05),B.Dep.Time=seq(9,16,by=.05))
new.data <- expand.grid(tmp)
new.data$fit <- predict(circuit.lm,new.data)
contourplot(fit ~ A + B, xlab="Cutting Speed",ylab="Cutting Angle")
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
circuit <- read.csv("6.12a.csv")
circuit.aov <- aov(Thickness ~A*B, data=circuit)
summary(circuit.aov)
circuit.lm <- lm(Thickness ~A*B , data=circuit)
summary(circuit.lm)
par(mfrow = c(2, 2))
plot(circuit.aov)
tmp <- list(A.Flow.Rate=seq(54,60,by=.05),B.Dep.Time=seq(9,16,by=.05))
new.data <- expand.grid(tmp)
new.data$fit <- predict(circuit.lm,new.data)
contourplot(fit ~ A + B, xlab="Cutting Speed",ylab="Cutting Angle")
tmp <- list(A=seq(54,60,by=.05),B=seq(9,16,by=.05))
new.data <- expand.grid(tmp)
new.data$fit <- predict(circuit.lm,new.data)
contourplot(fit ~ A + B, xlab="Cutting Speed",ylab="Cutting Angle")
tmp <- list(A=seq(54,60,by=.05),B=seq(9,16,by=.05))
new.data <- expand.grid(tmp)
new.data$fit <- predict(circuit.lm,new.data)
contourplot(new.data$fit ~ A + B, xlab="Cutting Speed",ylab="Cutting Angle")
new.data$fit
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
semicon <- read.csv("6.26a.csv")
semicon[,1:5] <- lapply(semicon[,1:5],factor)
mydata.lm=lm(Yield~A*B*C*D*E, data=semicon)
n=5
k=1
effects=coefficients(mydata.lm)[-c(2)]*2
effects
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
semicon <- read.csv("6.26a.csv")
semicon.aov <- aov(Yield~A+B+C+A*B, data=semicon)
summary(semicon.aov)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
semicon <- read.csv("6.26a.csv")
semicon_small <- subset(semicon, A.Aperture=="small")
semicon_small.lm <- lm(Yield~B.Exposure.Time+C.Develop.Time, data=semicon_small)
summary(semicon_small.lm)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
semicon <- read.csv("6.26a.csv")
semicon_small <- subset(semicon, A=="small")
semicon_small.lm <- lm(Yield~B+C, data=semicon_small)
summary(semicon_small.lm)
stripchart(residuals(semicon.aov) ~ semicon$A, vertical = TRUE, jitter = 0,
xlab = "Aperture", ylab = "Residuals", cex = 1, pch = 20, main = "Residuals vs. Aperture")
abline(h = 0, col = "black", lty = 3)
stripchart(residuals(semicon.aov) ~ semicon$B, vertical = TRUE, jitter = 0,
xlab = "Exposure Time", ylab = "Residuals", cex = 1, pch = 20, main = "Residuals vs. Exposure Time")
abline(h = 0, col = "black", lty = 3)
stripchart(residuals(semicon.aov) ~ semicon$C, vertical = TRUE, jitter = 0,
xlab = "Develop Time", ylab = "Develop Time", cex = 1, pch = 20, main = "Residuals vs. Develop Time")
abline(h = 0, col = "black", lty = 3)
stripchart(residuals(semicon.aov) ~ semicon$D, vertical = TRUE, jitter = 0,
xlab = "Mask Dimension", ylab = "Residuals", cex = 1, pch = 20, main = "Residuals vs. Mask Dimension")
abline(h = 0, col = "black", lty = 3)
stripchart(residuals(semicon.aov) ~ semicon$E, vertical = TRUE, jitter = 0,
xlab = "Etch Time", ylab = "Residuals", cex = 1, pch = 20, main = "Residuals vs. Etch Time")
abline(h = 0, col = "black", lty = 3)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
semicon <- read.csv("6.26a.csv")
semicon[,1:5] <- lapply(semicon[,1:5],factor)
library(ggplot2)
df <- with(semicon, aggregate(Yield, list(A= A, B = B),
mean))
df$se <- with(semicon, aggregate(Yield, list(A= A, B = B),
function(x) sd(x)/sqrt(10)))[, 3]
opar <- theme_update(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black"))
gp <- ggplot(df, aes(x = B, y = x, colour = A, group = A))
gp + geom_line(aes(linetype = A), size = 0.6) + geom_point(aes(shape = A),
size = 3) + geom_errorbar(aes(ymax = x + se, ymin = x - se), width = 0.1)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5")
semicon1 <- read.csv("6.27.csv")
semicon1a.aov <-  aov(Yield~ A+ B+ C+ I(D^2)+ A*B, data=semicon1)
summary(semicon1a.aov)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
semicon1 <- read.csv("6.27a.csv")
semicon1a.aov <-  aov(Yield~ A+ B+ C+ I(D^2)+ A*B, data=semicon1)
summary(semicon1a.aov)
semicon1a.aov <-  aov(Yield~ A+ B+ C+ I(A^2)+ A*B, data=semicon1)
summary(semicon1a.aov)
semicon1a.aov <-  aov(Yield~ A+ B+ C+ I(A^2), data=semicon1)
summary(semicon1a.aov)
semicon1
semicon1a.aov <-  aov(Yield~ A+ B+ C+ I(B^2)+A*B, data=semicon1)
summary(semicon1a.aov)
setwd("C:/Users/Subasish/Dropbox/A Spring 2014/Dr Novelo/HW/HW5/effects")
dat <- read.csv("6.39.csv")
aov1 <- aov(y ~  A*B*C*D*E, data= dat)
summary(aov1)
library(FrF2)
DanielPlot(aov1)
par(mfrow = c(2, 2))
plot(aov1)
setwd("C:/Users/Subasish/Downloads/SUBASISH_FILEZ/R DATA ANA/Research_R/knitr/HW/Econ HW 7")
cociane <- read.csv("Cocaine.csv")
head(cociane)
dim(cocaine)
setwd("C:/Users/Subasish/Downloads/SUBASISH_FILEZ/R DATA ANA/Research_R/knitr/HW/Econ HW 7")
cocaine <- read.csv("Cocaine.csv")
head(cocaine)
dim(cocaine)
cocaine_lm <- lm(price~ quant+qual+trend, data= cociane)
summary(cocaine)
summary(cocaine_lm)
setwd("C:/Users/Subasish/Downloads/SUBASISH_FILEZ/R DATA ANA/Research_R/knitr/HW/Econ HW 7")
cocaine <- read.csv("Cocaine.csv")
head(cocaine)
dim(cocaine)
cocaine_lm <- lm(price~ quant+qual+trend, data= cocaine)
summary(cocaine_lm)
setwd("C:/Users/Subasish/Downloads/SUBASISH_FILEZ/R DATA ANA/Research_R/knitr/HW/Econ HW 7")
cocaine <- read.csv("Cocaine.csv")
head(cocaine)
dim(cocaine)
cocaine_lm <- lm(price~ quant+qual+trend, data= cocaine)
summary(cocaine_lm)
